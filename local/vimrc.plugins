scriptencoding utf8

"
"Plug 'powerman/vim-plugin-AnsiEsc'
"Plug 'slashmili/alchemist.vim'

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" UML diagrams
" Plug 'scrooloose/vim-slumlord'
" Plug 'aklt/plantuml-syntax'

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

Plug 'slim-template/vim-slim', { 'for': 'slim' }

Plug 'tpope/vim-liquid', { 'for': 'liquid' }

" Plug 'maksimr/vim-jsbeautify'


"Plug 'easymotion/vim-easymotion'
"map <Leader>j <Plug>(easymotion-prefix)




" Plug 'jceb/vim-orgmode'
" Plug 'tpope/vim-speeddating'



" Plug 'wsdjeg/FlyGrep.vim'
" nnoremap <plug>fly-grep       :FlyGrep<cr>
" noremap  <plug>search(fly)  :FlyGrep<cr>
" nmap     <plug>(Smart-Search) <plug>search(fly)
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

let g:NERDCustomDelimiters = { 'q': { 'left': '/' } }

augroup qMode
  au!
  au BufEnter q set foldmethod=indent
augroup END

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""



Plug 'tpope/vim-projectionist'


" Plug 'neomake/neomake'
" call neomake#configure#automake('rw', 1000)
" nmap <localleader>m :Neomake!<cr>

" Plug 'joshdick/onedark.vim'

Plug 'tmux-plugins/vim-tmux-focus-events'

" Plug 'rafi/awesome-vim-colorschemes'
" Plug 'flazz/vim-colorschemes'


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:vimwiki_global_ext = 0 " do not 'highjack' all .md files in the system ;)"
let g:vimwiki_listsyms = ' SX'
let g:vimwiki_listsym_rejected = 'D'

" let g:vimwiki_listsyms = ' *✓'
" let g:vimwiki_listsym_rejected = '✗'
"
let s:wiki = {}
let s:wiki.auto_tags = 1
let s:wiki.path = '~/wiki/'

" let s:wiki.syntax = 'markdown'
" let s:wiki.ext = '.wiki'
let s:wiki.nested_syntaxes = {'q': 'q', 'ruby': 'ruby', 'python': 'python', 'sh': 'sh', 'yaml': 'yaml'}
" let s:wiki.nested_syntaxes = {'python': 'python', 'c++': 'cpp'}
let g:vimwiki_list = [s:wiki]

" let g:automatic_nested_syntaxes = 1

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:nerdtree_tabs_open_on_gui_startup = 0
let g:nerdtree_tabs_open_on_console_startup = 0
let g:nerdtree_tabs_smart_startup_focus = 2
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Plug ''
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
Plug 'majutsushi/tagbar'
map <plug>toggle(tagbar) :TagbarToggle<CR>
nmap <leader>TT <plug>toggle(tagbar)

" let g:tagbar_type_typescript = {
"   \ 'ctagsbin' : 'tstags',
"   \ 'ctagsargs' : '-f-',
"   \ 'sro': '.',
"   \ 'kinds': [
"     \ 'e:enums:0:1',
"     \ 'f:function:0:1',
"     \ 't:typealias:0:1',
"     \ 'M:Module:0:1',
"     \ 'I:import:0:1',
"     \ 'i:interface:0:1',
"     \ 'C:class:0:1',
"     \ 'm:method:0:1',
"     \ 'p:property:0:1',
"     \ 'v:variable:0:1',
"     \ 'c:const:0:1',
"   \ ],
"   \ 'sort' : 0
" \ }

let g:tagbar_autopreview=1


" let g:tagbar_type_typescript = {
"     \ 'ctagstype' : 'typescript',
"     \ 'kinds' : [
"         \ 'I:imports',
"         \ 'i:interfaces',
"         \ 't:types',
"         \ 'e:enums',
"         \ 'n:modules',
"         \ 'c:classes',
"         \ 'f:functions',
"         \ 'v:variables',
"         \ 'l:varlambdas',
"         \ 'm:members',
"         \ '?:unknown',
"     \ ],
"     \ 'sro': '.',
" \ }

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plug 'xolox/vim-notes'
" let g:notes_directories = ['~/notes']




" Plug 'tbabej/taskwiki'
" Plug 'powerman/vim-plugin-AnsiEsc'
" Plug 'blindFS/vim-taskwarrior'

" let g:taskwiki_disable_concealcursor = 1

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:gutentags_define_advanced_commands = 1
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
Plug 'jparise/vim-graphql', { 'for': ['graphql'] }
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:EditorConfig_max_line_indicator = 'fill'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
Plug 'shime/vim-livedown', { 'on': [ 'LivedownPreview', 'LivedownKill', 'LivedownToggle' ] }
call my#keymap#leader('al', '+Livedown')
nnoremap             <plug>livedown(preview) :LivedownPreview<cr>
nmap     <leader>alp <plug>livedown(preview)
nnoremap             <plug>livedown(kill)    :LivedownKill<cr>
nmap     <leader>alk <plug>livedown(kill)
nnoremap             <plug>livedown(toggle)  :LivedownToggle<cr>
nmap     <leader>alt <plug>livedown(toggle)

Plug 'vim-scripts/groovyindent-unix'

Plug 'tpope/vim-dispatch'
Plug 'radenling/vim-dispatch-neovim'
nmap <leader>m :Dispatch<cr>

Plug 'wincent/ferret'
let g:FerretMap=0

Plug 'edkolev/tmuxline.vim'


Plug 'tpope/vim-obsession'

Plug 'vim-scripts/calendar.vim--Matsumoto'






Plug 'sainnhe/lightline_foobar.vim'
let g:lightline.colorscheme = 'hypsteria_alter'
" let g:lightline.colorscheme = 'molokai'

Plug 'sakhnik/nvim-gdb'
let g:nvimgdb_disable_start_keymaps = 1
" nnoremap <leader>dd :GdbStart gdb -q a.out
" nnoremap <leader>dl :GdbStartLLDB lldb a.out
" nnoremap <leader>dp :GdbStartPDB python -m pdb main.py
" nnoremap <leader>db :GdbStartBashDB bashdb main.sh


" let g:vimspector_enable_mappings = 'HUMAN'

source ~/.vim/local/my/debug/vimspector.vim
" source ~/.vim/local/my/debug/vebugger.vim



source ~/.vim/local/defx.vim
source ~/.vim/local/lua-tree.vim

Plug 'Shougo/vimfiler.vim'
" Plug 'Shougo/deol.nvim'

let g:vimfiler_as_default_explorer = 0

Plug 'ryanoasis/vim-devicons'
let g:NERDTreeGitStatusUseNerdFonts = 0

Plug 'tpope/vim-scriptease'

" VM - visual Multi Cursors
fu! s:visual_multi_config()
  " I use C-ARROWS for desktop navigation
  " and S-ARROWS for tmux
  let leader = '\\'
  let visual = '\\'
  let g:VM_maps = {}

  let g:VM_default_mappings = 0
  let g:VM_maps["Reselect Last"]         = leader.'gS'
  let g:VM_maps["Add Cursor At Pos"]     = leader.'\'
  let g:VM_maps["Start Regex Search"]    = leader.'/'
  let g:VM_maps["Select All"]            = leader.'A'
  let g:VM_maps['Add Cursor Down']       = '<C-S-Down>'
  let g:VM_maps['Add Cursor Up']         = '<C-S-Up>'
  let g:VM_maps["Select l"]              = '<C-S-Right>'
  let g:VM_maps["Select h"]              = '<C-S-Left>'
  let g:VM_maps["Visual Regex"]          = visual.'/'
  let g:VM_maps["Visual All"]            = visual.'A'
  let g:VM_maps["Visual Add"]            = visual.'a'
  let g:VM_maps["Visual Find"]           = visual.'f'
  let g:VM_maps["Visual Cursors"]        = visual.'c'

  let g:VM_theme = 'neon'
endfu
call s:visual_multi_config()


let g:NERDTreeHijackNetrw = 1
let g:NERDTreeQuitOnOpen = 1
let g:NERDTreeAutoDeleteBuffer = 1

" set inccommand=nosplit
Plug 'markonm/traces.vim'
let g:traces_num_range_preview = 1
