#!/bin/bash -eE
set -o pipefail

export ASK_FORCE=
export VERBOSE=
SKIP_CHECK=
while getopts :vnf OPT; do
  case $OPT in
    v) VERBOSE=1;;
    f) ASK_FORSE=1;;
    n) SKIP_CHECK=1;;
    *) cat <<-END
Unknown option: -$OPTARG

Usage:

   dotvim [-v] [-f] [-n]

   -v     be verbose
   -f     ignore existing choices. ask again
   -n     skip currnt dir sanity check
END
       exit 1;;
  esac
done
shift $((OPTIND-1))

export ASK_VERBOSE=$VERBOSE

on_trap() {
  echo ERROR >&2
  caller 0 >&2
  caller 1 >&2
  caller 2 >&2
  exit 1
}
trap on_trap ERR


if [[ -z $SKIP_CHECK ]]; then
  # sanity check
  if ! [[ $PWD = */.vim || $PWD = */vim || $PWD = */nvim || -s vimrc || -s init.vim  ]]; then
    echo "You are running dotvim generate in directory $PWD."
    echo "It doesn't looks like a vim directory"
    echo "re-run passing '-n' parameter to disable this check"
    exit 1
  fi
fi

source "$(dirname "${BASH_SOURCE}")/../vendor/ask.sh/lib/ask.sh"
source "$(dirname "${BASH_SOURCE}")/../lib/common.sh"

clean_manifest() {
  if [[ -f $MANIFEST ]]; then
    cat "${MANIFEST}" | xargs rm -f
  fi
  rm -f "${MANIFEST}"
  touch "${MANIFEST}"
}

init_vimdir() {
  init .config

  clean_manifest
}

MANIFEST=.files

init_vimdir

load "$(dirname "$BASH_SOURCE")/.."

finish
cat .config  | grep '^[^#]' | sed -E -e "s/^([^=]+)=(.*)$/let g:dotvim#\1 = '\2'/" > .config.vim

bold
info -e "\nDONE"
