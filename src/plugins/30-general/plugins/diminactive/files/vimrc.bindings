" 0 - disabled
" 1 - use syntax
" 2 - use colorcolumns
fu s:updateDiminactive()
  if g:diminactive_mode == 1

    let g:diminactive_use_colorcolumn = 0
    let g:diminactive_use_syntax = 1
    exe "DimInactiveOn"

  elseif g:diminactive_mode == 2

    let g:diminactive_use_colorcolumn = 1
    let g:diminactive_use_syntax = 0
    exe "DimInactiveOn"

  else

    let g:diminactive_use_colorcolumn = 0
    let g:diminactive_use_syntax = 0
    exe "DimInactiveOff"

  endif
endfu

if (!exists("g:diminactive_mode"))
  let g:diminactive_mode = 1
endif
call s:updateDiminactive()

" cycle 0, 1, 2
fu s:cycleDiminitive()

  let g:diminactive_mode = max([0, g:diminactive_mode + 1])
  echo g:diminactive_mode

  if g:diminactive_mode > 2
    let g:diminactive_mode = 0
  endif

  call s:updateDiminactive()
endfu

noremap              <plug>toggle(diminactive) :call <SID>cycleDiminitive()<cr>
nmap     <leader>Td  <plug>toggle(diminactive)
