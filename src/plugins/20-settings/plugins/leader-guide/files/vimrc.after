function! s:my_displayfunc()
  " remove <CR> at the end
  let g:leaderGuide#displayname =
        \ substitute(g:leaderGuide#displayname, '\c<cr>$', '', '')
  " remove <plug> at the beginning
  let g:leaderGuide#displayname =
        \ substitute(g:leaderGuide#displayname, '^\c<Plug>', '', '')

  " remove "folders", e.g. (Foo/Bar-Baz/Boom) -> Boom
  let g:leaderGuide#displayname =
        \ substitute(g:leaderGuide#displayname, '^(\(\w[0-9A-Za-z_-]*/\)*\(.*\))$', '\2', '')

  " remove parens (foo) -> foo
  let g:leaderGuide#displayname =
        \ substitute(g:leaderGuide#displayname, '^(\(.*\))$', '\1', '')

  " convert some characters to spaces
  let g:leaderGuide#displayname =
        \ substitute(g:leaderGuide#displayname, '[-_()]', ' ', 'g')
endfunction
let g:leaderGuide_displayfunc = [function("s:my_displayfunc")]

let g:topdict = {}
let g:topdict[' '] = g:leader_map_guide
let g:topdict[' ']['name'] = '<leader>'
let g:topdict[','] = g:local_leader_map_guide
let g:topdict[',']['name'] = '<localleader>'
call leaderGuide#register_prefix_descriptions("", "g:topdict")

set timeoutlen=500

noremap <plug>guide(global)  :<c-u>LeaderGuide '<Space>'<CR>
noremap <plug>guide(local)   :<c-u>LeaderGuide ','<CR>
noremap <plug>vguide(global) :<c-u>LeaderGuideVisual  '<space>'<CR>
noremap <plug>vguide(local)  :<c-u>LeaderGuideVisual  ','<CR>

map <silent> <leader>      <plug>guide(global)
map <silent> <localleader> <plug>guide(local)

vmap <silent> <leader>      <plug>vguide(global)
vmap <silent> <localleader> <plug>vguide(local)

map  <leader>.      <Plug>leaderguide-global
map  <localleader>. <Plug>leaderguide-buffer
